


library sphere
{
    vec3_t transform_position( vec3_t pos_in ) 
    {
        pos_in.xz *= 0.5 ;  
        pos_in.y = pos_in.y * 0.5 + 0.5 ;
        return pos_in ;
    }

    int_t num_verts_per_cube = 24 ;
    int_t stride = 1 ;
    float_t circle = 3.1632423 ;

    int_t make_idx( int_t vid ) { return vid / 24 ; }

    vec2_t field_pos( float_t idx, vec2_t dims ) 
    {
        return vec2_t( mod( idx, dims.x ), idx / dims.x ) ;
    }

    vec4_t extract_position_scale( int_t idx, data_buffer_t db ) 
    {
        return fetch_data( db, idx * msl.cubes.stride + 0 ) ;
    }

    vec4_t extract_color( int_t idx, data_buffer_t db )
    {
        return fetch_data( db, idx * msl.cubes.stride + 1 ) ;
    }

    float_t width = 100.0 ;
    float_t height = 100.0 ;
    float_t depth = 100.0 ;

    vec3_t extract_position( int_t idx, data_buffer_t db ) 
    {
        vec4_t c0 = fetch_data( db, idx * msl.sphere.stride + 0 ) ; 
        return vec3_t( c0.x, c0.y, c0.z ) ;
    }


    float_t wave_y( vec2_t pos, vec2_t amp, vec2_t freq, vec2_t phase )
    {
        float_t y = 0.0 ;

        y = y+amp.x*(sin( freq.x * pos.x * msl.cubes.circle + phase.x ) *0.5 +0.5);
        y = y+amp.y*(cos( freq.y * pos.y * msl.cubes.circle + phase.y ) *0.5+0.5);

        return y ;
    }

}
